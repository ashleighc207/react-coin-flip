{"version":3,"sources":["Coin.js","Gameboard.js","App.js","index.js"],"names":["Coin","className","this","props","icon","Component","Gameboard","state","dogCount","catCount","total","handleClick","bind","randIdx","Math","floor","random","icons","length","setState","e","flipCoin","onClick","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"uUAeeA,G,6LAVX,OACE,iCACE,yBAAKC,UAAU,QACb,uBAAGA,UAAWC,KAAKC,MAAMC,KAAO,sB,GALvBC,cCEbC,E,YAIJ,WAAYH,GAAO,IAAD,8BAChB,4CAAMA,KACDI,MAAQ,CACXC,SAAU,EACVC,SAAU,EACVC,MAAO,EACPN,KAAM,cAER,EAAKO,YAAc,EAAKA,YAAYC,KAAjB,gBARH,E,wEAYhB,IAAIC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWd,KAAKC,MAAMc,MAAMC,QAE1DhB,KAAKiB,SAAS,SAAAZ,GAOZ,MANe,CACbH,KAAmB,IAAZS,EAAgB,aAAe,aACtCH,MAAOH,EAAMG,MAAQ,EACrBF,SAAUD,EAAMC,UAAwB,IAAZK,EAAgB,EAAI,GAChDJ,SAAUF,EAAME,UAAwB,IAAZI,EAAgB,EAAI,Q,kCAM1CO,GACVlB,KAAKmB,a,+BAIL,OACE,6BAASpB,UAAU,aACjB,uCACA,kBAAC,EAAD,CAAMG,KAAMF,KAAKK,MAAMH,OACvB,4BAAQkB,QAASpB,KAAKS,aAAtB,YACA,qCAAWT,KAAKK,MAAMG,MAAtB,WAAqCR,KAAKK,MAAMC,SAAhD,iBAAwEN,KAAKK,MAAME,SAAnF,mB,GAvCgBJ,aAAlBC,EACGiB,aAAe,CACpBN,MAAO,CAAC,SAAU,WA2CPX,QCtCAkB,MARf,WACE,OACE,yBAAKvB,UAAU,OACb,kBAAC,EAAD,QCFNwB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d7f0d0f7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Coin.css';\n\nclass Coin extends Component {\n  render(){\n    return(\n      <section>\n        <div className=\"Coin\">\n          <i className={this.props.icon + \" Coin--icon\"}></i>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default Coin;\n","import React, { Component } from 'react';\nimport './Gameboard.css';\nimport Coin from './Coin';\n\n\nclass Gameboard extends Component {\n  static defaultProps = {\n    icons: ['fa-cat', 'fa-dog']\n  }\n  constructor(props){\n    super(props);\n    this.state = {\n      dogCount: 0,\n      catCount: 0,\n      total: 0,\n      icon: 'fas fa-dog'\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  flipCoin() {\n    let randIdx = Math.floor(Math.random() * this.props.icons.length);\n\n    this.setState(state => {\n      let newState = {\n        icon: (randIdx === 0 ? \"fas fa-dog\" : \"fas fa-cat\"),\n        total: state.total + 1,\n        dogCount: state.dogCount + (randIdx === 0 ? 1 : 0),\n        catCount: state.catCount + (randIdx === 1 ? 1 : 0)\n      }\n      return newState;\n    })\n  }\n\n  handleClick(e) {\n    this.flipCoin();\n  }\n\n  render(){\n    return(\n      <section className=\"Gameboard\">\n        <h1>Flip it</h1>\n        <Coin icon={this.state.icon}/>\n        <button onClick={this.handleClick}>Flip me!</button>\n        <p>Out of {this.state.total} flips, {this.state.dogCount} were dog and {this.state.catCount} were cat.</p>\n      </section>\n    )\n  }\n}\n\nexport default Gameboard;\n","import React from 'react';\nimport './App.css';\nimport Gameboard from './Gameboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Gameboard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}